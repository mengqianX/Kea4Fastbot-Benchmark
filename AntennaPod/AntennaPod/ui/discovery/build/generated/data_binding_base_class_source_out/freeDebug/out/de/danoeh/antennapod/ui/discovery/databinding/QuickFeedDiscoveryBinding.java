// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.ui.discovery.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.danoeh.antennapod.ui.common.WrappingGridView;
import de.danoeh.antennapod.ui.discovery.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class QuickFeedDiscoveryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final WrappingGridView discoverGrid;

  @NonNull
  public final Button discoverMore;

  @NonNull
  public final LinearLayout errorContainer;

  @NonNull
  public final TextView errorLabel;

  @NonNull
  public final Button errorRetryButton;

  @NonNull
  public final TextView poweredByLabel;

  private QuickFeedDiscoveryBinding(@NonNull LinearLayout rootView,
      @NonNull WrappingGridView discoverGrid, @NonNull Button discoverMore,
      @NonNull LinearLayout errorContainer, @NonNull TextView errorLabel,
      @NonNull Button errorRetryButton, @NonNull TextView poweredByLabel) {
    this.rootView = rootView;
    this.discoverGrid = discoverGrid;
    this.discoverMore = discoverMore;
    this.errorContainer = errorContainer;
    this.errorLabel = errorLabel;
    this.errorRetryButton = errorRetryButton;
    this.poweredByLabel = poweredByLabel;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static QuickFeedDiscoveryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static QuickFeedDiscoveryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.quick_feed_discovery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static QuickFeedDiscoveryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.discover_grid;
      WrappingGridView discoverGrid = ViewBindings.findChildViewById(rootView, id);
      if (discoverGrid == null) {
        break missingId;
      }

      id = R.id.discover_more;
      Button discoverMore = ViewBindings.findChildViewById(rootView, id);
      if (discoverMore == null) {
        break missingId;
      }

      id = R.id.errorContainer;
      LinearLayout errorContainer = ViewBindings.findChildViewById(rootView, id);
      if (errorContainer == null) {
        break missingId;
      }

      id = R.id.errorLabel;
      TextView errorLabel = ViewBindings.findChildViewById(rootView, id);
      if (errorLabel == null) {
        break missingId;
      }

      id = R.id.errorRetryButton;
      Button errorRetryButton = ViewBindings.findChildViewById(rootView, id);
      if (errorRetryButton == null) {
        break missingId;
      }

      id = R.id.poweredByLabel;
      TextView poweredByLabel = ViewBindings.findChildViewById(rootView, id);
      if (poweredByLabel == null) {
        break missingId;
      }

      return new QuickFeedDiscoveryBinding((LinearLayout) rootView, discoverGrid, discoverMore,
          errorContainer, errorLabel, errorRetryButton, poweredByLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
