// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.ui.preferences.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import de.danoeh.antennapod.ui.preferences.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AuthenticationDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText passwordEditText;

  @NonNull
  public final ImageView showPasswordButton;

  @NonNull
  public final TextInputEditText usernameEditText;

  private AuthenticationDialogBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText passwordEditText, @NonNull ImageView showPasswordButton,
      @NonNull TextInputEditText usernameEditText) {
    this.rootView = rootView;
    this.passwordEditText = passwordEditText;
    this.showPasswordButton = showPasswordButton;
    this.usernameEditText = usernameEditText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AuthenticationDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AuthenticationDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.authentication_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AuthenticationDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.passwordEditText;
      TextInputEditText passwordEditText = ViewBindings.findChildViewById(rootView, id);
      if (passwordEditText == null) {
        break missingId;
      }

      id = R.id.showPasswordButton;
      ImageView showPasswordButton = ViewBindings.findChildViewById(rootView, id);
      if (showPasswordButton == null) {
        break missingId;
      }

      id = R.id.usernameEditText;
      TextInputEditText usernameEditText = ViewBindings.findChildViewById(rootView, id);
      if (usernameEditText == null) {
        break missingId;
      }

      return new AuthenticationDialogBinding((LinearLayout) rootView, passwordEditText,
          showPasswordButton, usernameEditText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
