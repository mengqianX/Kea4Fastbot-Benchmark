// Generated by view binder compiler. Do not edit!
package de.danoeh.antennapod.ui.preferences.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import de.danoeh.antennapod.ui.preferences.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ThemePreferenceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CardView themeDarkCard;

  @NonNull
  public final TextView themeDarkCardRadio;

  @NonNull
  public final CardView themeLightCard;

  @NonNull
  public final TextView themeLightRadio;

  @NonNull
  public final CardView themeSystemCard;

  @NonNull
  public final TextView themeSystemRadio;

  private ThemePreferenceBinding(@NonNull LinearLayout rootView, @NonNull CardView themeDarkCard,
      @NonNull TextView themeDarkCardRadio, @NonNull CardView themeLightCard,
      @NonNull TextView themeLightRadio, @NonNull CardView themeSystemCard,
      @NonNull TextView themeSystemRadio) {
    this.rootView = rootView;
    this.themeDarkCard = themeDarkCard;
    this.themeDarkCardRadio = themeDarkCardRadio;
    this.themeLightCard = themeLightCard;
    this.themeLightRadio = themeLightRadio;
    this.themeSystemCard = themeSystemCard;
    this.themeSystemRadio = themeSystemRadio;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ThemePreferenceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ThemePreferenceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.theme_preference, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ThemePreferenceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.themeDarkCard;
      CardView themeDarkCard = ViewBindings.findChildViewById(rootView, id);
      if (themeDarkCard == null) {
        break missingId;
      }

      id = R.id.themeDarkCardRadio;
      TextView themeDarkCardRadio = ViewBindings.findChildViewById(rootView, id);
      if (themeDarkCardRadio == null) {
        break missingId;
      }

      id = R.id.themeLightCard;
      CardView themeLightCard = ViewBindings.findChildViewById(rootView, id);
      if (themeLightCard == null) {
        break missingId;
      }

      id = R.id.themeLightRadio;
      TextView themeLightRadio = ViewBindings.findChildViewById(rootView, id);
      if (themeLightRadio == null) {
        break missingId;
      }

      id = R.id.themeSystemCard;
      CardView themeSystemCard = ViewBindings.findChildViewById(rootView, id);
      if (themeSystemCard == null) {
        break missingId;
      }

      id = R.id.themeSystemRadio;
      TextView themeSystemRadio = ViewBindings.findChildViewById(rootView, id);
      if (themeSystemRadio == null) {
        break missingId;
      }

      return new ThemePreferenceBinding((LinearLayout) rootView, themeDarkCard, themeDarkCardRadio,
          themeLightCard, themeLightRadio, themeSystemCard, themeSystemRadio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
